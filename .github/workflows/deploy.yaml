name: Process JSON Files Every Hour

on:
  push:
    branches:
      - actions
    paths:
      - .github/workflows/deploy.yaml
  schedule:
    - cron: '0 * * * *'  # Runs at the start of every hour
#      branches:
#        - actions

jobs:
  process-json:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/actions'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Process JSON files in state_transitions
        run: |
          find data/ -type f -name '*.json' | while IFS= read -r file; do
            echo "Processing $file"
          curl -s -q -X POST https://dev.jamcha.in/api/v1/functions/check_stf_safrole \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -d @"$file"
          done
          #REPO="${{ github.repository }}"
          #BRANCH="actions"
          # Loop through all JSON files in any state_transitions folder under data/*
          #for file in $(find data/*/state_transitions -type f -name '*.json'); do
            # Construct the raw file URL using the repository name and branch.
          #url="https://raw.githubusercontent.com/$REPO/$BRANCH/${file#*/}"
          #echo "Processing $file"

          #curl -s -q -X POST https://dev.jamcha.in/api/v1/functions/check_stf_safrole   -H 'accept: application/json'   -H 'Content-Type: application/json' -d @data/safrole/state_transitions/1_000.json
          #curl -s -q -X POST https://dev.jamcha.in/api/v1/functions/check_stf_safrole   -H 'accept: application/json'   -H 'Content-Type: application/json' -d @data/safrole/state_transitions/1_001.json

            # Execute the curl request and handle errors
            #response=$(curl -s "$url" | curl -X POST https://dev.jamcha.in/api/v1/functions/check_stf_safrole \
            #-H 'accept: application/json' \
            #-H 'Content-Type: application/json' \
            #-d @-)
            #if [[ -z "$response" ]]; then
            #  response="{\"error\": \"Empty response from API\"}"
            #fi
            #echo "$response" | jq .
            #done
